"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Democracy = (function (_Pudding) {
    _inherits(Democracy, _Pudding);

    function Democracy() {
      _classCallCheck(this, Democracy);

      _get(Object.getPrototypeOf(Democracy.prototype), "constructor", this).apply(this, arguments);
    }

    return Democracy;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Democracy.abi = [{ "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "proposals", "outputs": [{ "name": "description", "type": "string" }, { "name": "end", "type": "uint256" }, { "name": "adopted", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "members", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "index", "type": "uint256" }], "name": "executeProposal", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "description", "type": "string" }], "name": "addProposal", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "nbProposals", "outputs": [{ "name": "nbProposals", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "votingTimeInMinutes", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "owner", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "index", "type": "uint256" }, { "name": "vote", "type": "bool" }], "name": "vote", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "newMember", "type": "address" }], "name": "addMember", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "newVotingTime", "type": "uint256" }], "name": "setVotingTime", "outputs": [], "type": "function" }, { "inputs": [{ "name": "votingTime", "type": "uint256" }], "type": "constructor" }];
  Democracy.binary = "606060405260405160208061082e83395060806040525160018054600160a060020a03191633908117918290556046918391600160a060020a039182169116146055576002565b506107cc806100626000396000f35b806000600050819055505056606060405236156100825760e060020a6000350463013cf08b811461008457806308ae4b0c146101145780630d61b5191461012f5780632fdae3c5146101835780635c4f4fd4146101f157806365a8285a146102075780638da5cb5b14610210578063c9d27afe14610222578063ca6d56dc14610252578063d7c8197614610274575b005b61029660043560038054829081101561000257506000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e6005909102908101547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f8201547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9092019160ff1683565b6101f560043560026020526000908152604090205460ff1681565b6100826004356000600060006000846003600050818154811015610002575082527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e6005820201544210156106e257610002565b6040805160206004803580820135601f810184900484028501840190955284845261008294919360249390929184019190819084018382808284375094965050505050505033600160a060020a0316600090815260026020526040812054819060ff16151561037457610002565b6003545b60408051918252519081900360200190f35b6101f560005481565b61032e600154600160a060020a031681565b61008260043560243533600160a060020a031660009081526002602052604090205460ff16151561053457610002565b610082600435600154600160a060020a03908116339091161461035057610002565b610082600435600154600160a060020a03908116339091161461034b57610002565b60408051602081018490529081018290526060808252845460026001821615610100026000190190911604908201819052819060808201908690801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b505094505050505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b600055565b600160a060020a03166000908152600260205260409020805460ff19166001179055565b60038054600181018083559091908280158290116103c75760008390526103c79060059081027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90810191840201610460565b50505091506003600050828154811015610002579060005260206000209060050201600050905082816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104f057805160ff19168380011785555b506105209291506104ba565b50506000600382015560048101805460ff191690556001015b808211156104ec57600060008201600050805460018160011615610100020316600290046000825580601f106104ce57505b5060028201600050805460008255601f01602090049060005260206000209081019061044791905b808211156104ec57600081556001016104ba565b601f01602090049060005260206000209081019061049291906104ba565b5090565b8280016001018555821561043b579182015b8281111561043b578251826000505591602001919060010190610502565b5050600054603c0242016003820155505050565b816003600050818154811015610002576000919091526005027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e015442111561057c57610002565b8260036000508181548110156100025733600160a060020a031660009081526005919091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c01602052604090205460ff161590506105da57610002565b600380548590811015610002576000919091526005027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d01805460018101808355828183801582901161064e57601f016020900481601f0160209004836000526020600020918201910161064e91906104ba565b5050509190906000526020600020906020918282040191900685909190916101000a81548160ff0219169083021790555050600160036000508581548110156100025733600160a060020a031660009081526005919091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c0160205260409020805460ff19169092179091555050505050565b60038054879081101561000257506000908152600587027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d01935091505b8254821015610761578282815481101561000257600091825260209182902082820401549190066101000a900460ff16156107b857600194909401936107c0565b838511156107b0576001600360005087815481101561000257506000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f6005880201805460ff191690911790555b505050505050565b600193909301925b6001919091019061072056";

  if ("0xc480993a2647ef7da2707d16ccc4eed2b5873570" != "") {
    Democracy.address = "0xc480993a2647ef7da2707d16ccc4eed2b5873570";

    // Backward compatibility; Deprecated.
    Democracy.deployed_address = "0xc480993a2647ef7da2707d16ccc4eed2b5873570";
  }

  Democracy.generated_with = "1.0.3";
  Democracy.contract_name = "Democracy";

  return Democracy;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Democracy = factory;
}